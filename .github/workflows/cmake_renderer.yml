name: CMake Renderer

on:
  push:
    branches: [ "master", "dev", "dev-ndy", "dev-sge" ]
    paths: ['lib/renderer/**', '.github/workflows/cmake_renderer.yml']

env:
  CMAKELISTS_DIR: ${{github.workspace}}/lib/renderer

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
      fail-fast: false

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive   
        
    - name: Get Conan
      uses: turtlebrowser/get-conan@v1.2
      
    - name: Create default profile
      run: conan profile detect --force

    - name: Create packages
      working-directory: ${{env.CMAKELISTS_DIR}}
      run:  |
        conan export ../util         
        conan export .
        conan create test --build=missing --settings=compiler.cppstd=20
        conan export ../core       
        conan export ../io/chemfiles
        conan export ../io
        conan create bench --build=missing --settings=compiler.cppstd=20
         
    - name: Test
      working-directory: ${{env.CMAKELISTS_DIR}}
      run: ctest --verbose    
    
#    - name: Install
#      if: runner.os == 'Windows'
#      working-directory: ${{env.CMAKELISTS_DIR}}/${{env.CMAKE_BUILD_DIR}}
#      run: cmake --install . --config ${{env.BUILD_TYPE}} --prefix ${{env.CMAKELISTS_DIR}}/${{env.CMAKE_INSTALL_DIR}}
#    - name: Install
#      if: runner.os == 'Linux' || runner.os == 'macOS'
#      working-directory: ${{env.CMAKELISTS_DIR}}/${{env.CMAKE_BUILD_DIR}}
#      run: sudo cmake --install . --config ${{env.BUILD_TYPE}} --prefix ${{env.CMAKELISTS_DIR}}/${{env.CMAKE_INSTALL_DIR}}

#    - uses: actions/upload-artifact@v3
#      with:
#        name: VTXRendererBench_${{runner.os}}
#        path: ${{env.CMAKELISTS_DIR}}/${{env.CMAKE_INSTALL_DIR}}/VTXRendererBench
      
