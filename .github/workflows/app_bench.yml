name: App Bench

on:
  push:
    branches: [ "master", "dev", "dev-ndy", "dev-sge", "dev-vge" ]
    paths: ['app/bench/**', 'lib/renderer/**', '.github/workflows/app_bench.yml']

env:
  ROOT_DIR: ${{github.workspace}}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022, ubuntu-22.04, windows-latest, ubuntu-latest]
      fail-fast: false

    steps:
    - name: Set git to use CRLF
      run: |
        git config --global core.autocrlf true
        git config --global core.eol crlf
        
    - uses: actions/checkout@v4
      with:
        submodules: recursive   
        
    - name: Get Conan
      uses: turtlebrowser/get-conan@v1.2
      
    - name: Create default profile
      run: conan profile detect --force

    - name: Add custom remote
      run: |
        conan remote add --insecure cano7782 ${{ secrets.CONAN_SERVER_HOST }}
        conan remote login -p ${{ secrets.CONAN_SERVER_PASSWORD }} cano7782 ${{ secrets.CONAN_SERVER_USER }}

    - name: Create package
      working-directory: ${{env.ROOT_DIR}}
      run:  |
        conan export lib/util
        conan export lib/renderer
        conan export lib/core
        conan export lib/io
        conan create app/bench -b missing -s compiler.cppstd=20 -c tools.system.package_manager:mode=install -c tools.system.package_manager:sudo=True --format=json > output.json

    - name: Upload dependencies
      run: |
        conan upload sdl -r=cano7782
        conan upload imgui -r=cano7782
        conan upload stb -r=cano7782

    - name: Read package path from output.json
      id: read_package_path
      working-directory: ${{env.ROOT_DIR}}
      run: echo "PACKAGE_PATH=$(jq -r '.graph.nodes["1"].package_folder' output.json)" >> "$GITHUB_OUTPUT"
      shell: bash
        
    - uses: actions/upload-artifact@v4.3.1
      env:
        PACKAGE_PATH: ${{ steps.read_package_path.outputs.PACKAGE_PATH }}
      with:
        name: VTXRendererBench_${{matrix.os}}
        path: ${{env.PACKAGE_PATH}}