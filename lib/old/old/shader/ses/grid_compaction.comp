#version 450
#include "include/struct.glsl"
#include "include/helper.glsl"
#include "include/grid.glsl"

#ifndef LOCAL_SIZE_X
	#define LOCAL_SIZE_X 1
#endif
#ifndef LOCAL_SIZE_Y
	#define LOCAL_SIZE_Y 1
#endif
#ifndef LOCAL_SIZE_Z
	#define LOCAL_SIZE_Z 1
#endif
layout (local_size_x = LOCAL_SIZE_X, local_size_y = LOCAL_SIZE_Y, local_size_z = LOCAL_SIZE_Z) in;

// Uniforms.
uniform uint uSize;
uniform uint uSizeReduced;

// SSBO.
layout (std430, binding = 0) readonly buffer CellValidities
{
	uint[] cellValidities;
};

layout (std430, binding = 1) readonly buffer CellHashs
{
	uint[] cellHashs;
};

layout (std430, binding = 2) writeonly buffer CellHashsReduced
{
	uint[] cellHashsReduced;
};

void main()
{
	const uint index = globalInvocationHash( gl_GlobalInvocationID, gl_NumWorkGroups, gl_WorkGroupSize );
	
	if( index >= uSize )
	{
		return;
	}

	if( cellValidities[ index ] == cellValidities[ index + 1 ] )
	{
		return;
	}

	const uint indexNew = cellValidities[ index ];
	cellHashsReduced[ indexNew ] = cellHashs[ index ];
}