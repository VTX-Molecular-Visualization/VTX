#version 450
#include "include/helper.glsl"

#ifndef LOCAL_SIZE_X
	#define LOCAL_SIZE_X 1
#endif
#ifndef LOCAL_SIZE_Y
	#define LOCAL_SIZE_Y 1
#endif
#ifndef LOCAL_SIZE_Z
	#define LOCAL_SIZE_Z 1
#endif
#ifndef TYPE
	#define TYPE uint
#endif
#ifndef LAYOUT
	#define LAYOUT std430
#endif
#ifndef VALUE
	#define VALUE 0
#endif
layout (local_size_x = LOCAL_SIZE_X, local_size_y = LOCAL_SIZE_Y, local_size_z = LOCAL_SIZE_Z) in;

// Uniforms.
uniform uint uSize;

// SSBO.
layout (LAYOUT, binding = 0) writeonly buffer BufferToFill
{
	TYPE[] bufferToFill;
};

void main()
{
	uint hash = globalInvocationHash( gl_GlobalInvocationID, gl_NumWorkGroups, gl_WorkGroupSize );
	
	if( hash >= uSize )
	{
		return;
	}

	bufferToFill[ hash ] = VALUE;
}